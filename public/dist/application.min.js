"use strict";var ApplicationConfiguration=function(){var applicationModuleName="MEAN",applicationModuleVendorDependencies=["ngResource","ui.router","ui.bootstrap","ui.utils","ngMaterial","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$mdThemingProvider","$mdIconProvider",function($locationProvider,$mdThemingProvider,$mdIconProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$mdThemingProvider.theme("default"),$mdIconProvider.defaultIconSet("./assets/svg/avatars.svg",128).icon("menu","./assets/svg/menu.svg",24).icon("more","./assets/svg/more.svg",24).icon("share","./assets/svg/share.svg",24).icon("google_plus","./assets/svg/google_plus.svg",512).icon("hangouts","./assets/svg/hangouts.svg",512).icon("twitter","./assets/svg/twitter.svg",512).icon("phone","./assets/svg/phone.svg",512)}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
"use strict";ApplicationConfiguration.registerModule("core");
"use strict";ApplicationConfiguration.registerModule("recipes");
"use strict";ApplicationConfiguration.registerModule("users");
"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]);
"use strict";angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]);
"use strict";angular.module("core").controller("HomeController",["$scope","Authentication","usersService","Recipes","$mdSidenav","$mdBottomSheet","$log",function($scope,Authentication,usersService,Recipes,$mdSidenav,$mdBottomSheet,$log){function toggleUsersList(){$mdSidenav("left").toggle()}function toggleUsersMenu(){}function selectUser(recipeitem){self.selected=angular.isNumber(recipeitem)?$scope.recipeitems[recipeitem]:recipeitem,self.toggleList()}function share($event){function UserSheetController($mdBottomSheet){this.recipeitem=recipeitem,this.items=[{name:"Phone",icon:"phone"},{name:"Twitter",icon:"twitter"},{name:"Google+",icon:"google_plus"},{name:"Hangout",icon:"hangouts"}],this.performAction=function(action){$mdBottomSheet.hide(action)}}var recipeitem=self.selected;$mdBottomSheet.show({parent:angular.element(document.getElementById("contenttext")),templateUrl:"modules/core/views/contactSheet.html",controller:["$mdBottomSheet",UserSheetController],controllerAs:"vm",bindToController:!0,targetEvent:$event}).then(function(clickedItem){$log.debug(clickedItem.name+" clicked!")})}$scope.authentication=Authentication,$scope.find=function(){$scope.recipes=Recipes.query()},usersService.loadAll().then(function(recipeitems){self.recipeitems=[].concat(recipeitems),self.selected=recipeitems[0]});var self=this;self.selected=null,self.recipeitems=[],self.selectUser=selectUser,self.toggleList=toggleUsersList,self.toggleMenu=toggleUsersMenu,self.share=share}]);
"use strict";angular.module("core").service("usersService",["$q",function($q){var users=[{title:"Ready to Bake",img:"./img/item1.png",author:"by Viktor Hanacek",span:{row:1,col:1}},{title:"Perfect Italian Pizza",img:"./img/item1.png",author:"by Jakub K.",span:{row:1,col:1}},{title:"The Best Chocolate Cake Ever",img:"./img/item3.png",author:"by Mitchell Millsaps",span:{row:1,col:2}},{title:"The Perfect Milkshake",img:"./img/item1.png",author:"by Viktor Hanacek",span:{row:1,col:1}},{title:"Homemade Burger",img:"./img/item2.png",author:"by Jakub K.",span:{row:2,col:1}},{title:"Morning Musli",img:"./img/item1.png",author:"by Viktor Hanacek",span:{row:1,col:1}}];return{loadAll:function(){return $q.when(users)}}}]),angular.module("core").factory("Recipes",["$resource",function($resource){return $resource("api/recipes/:recipeId",{recipeId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options.class,isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].roles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].items[itemIndex].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!1})}]);
"use strict";angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){Authentication.user?this.socket=io():$state.go("home"),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]);
"use strict";angular.module("recipes").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Recipes",state:"recipes",type:"dropdown"}),Menus.addSubMenuItem("topbar","recipes",{title:"List Recipes",state:"recipes.list"}),Menus.addSubMenuItem("topbar","recipes",{title:"Create Recipes",state:"recipes.create"})}]);
"use strict";angular.module("recipes").config(["$stateProvider",function($stateProvider){$stateProvider.state("recipes",{"abstract":!0,url:"/recipes",template:"<ui-view/>"}).state("recipes.list",{url:"",templateUrl:"modules/recipes/views/list-recipes.client.view.html"}).state("recipes.create",{url:"/create",templateUrl:"modules/recipes/views/create-recipe.client.view.html"}).state("recipes.view",{url:"/:recipeId",templateUrl:"modules/recipes/views/view-recipe.client.view.html"}).state("recipes.edit",{url:"/:recipeId/edit",templateUrl:"modules/recipes/views/edit-recipe.client.view.html"})}]);
"use strict";angular.module("recipes").controller("RecipesController",["$scope","$stateParams","$location","Authentication","$upload","Recipes",function($scope,$stateParams,$location,Authentication,$upload,Recipes){$scope.authentication=Authentication,$scope.onFileSelect=function(image){return console.log("Test : "+image),angular.isArray(image)&&(image=image[0]),"image/png"!==image.type&&"image/jpeg"!==image.type?void alert("Only PNG and JPEG are accepted."):($scope.uploadInProgress=!0,$scope.uploadProgress=0,void($scope.upload=$upload.upload({url:"/img",method:"POST",headers:{"Content-Type":"multipart/form-data"},file:image}).progress(function(event){$scope.uploadProgress=Math.floor(event.loaded/event.total),$scope.$apply()}).success(function(data){$scope.uploadInProgress=!1,$scope.uploadedImage=JSON.parse(data)}).error(function(err){$scope.uploadInProgress=!1,console.log("Error uploading file: "+err.message||err)})))},$scope.create=function(){var recipe=new Recipes({title:this.title,content:this.content,rspan:this.rspan,cspan:this.cspan,url:this.recipeimage});recipe.$save(function(response){$location.path("recipes/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){alert("please input only number in Span Field"),$scope.error=errorResponse.data.message})},$scope.remove=function(recipe){if(recipe){recipe.$remove();for(var i in $scope.recipes)$scope.recipes[i]===recipe&&$scope.recipes.splice(i,1)}else $scope.recipe.$remove(function(){$location.path("recipes")})},$scope.update=function(){var recipe=$scope.recipe;recipe.$update(function(){$location.path("recipes/"+recipe._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.recipes=Recipes.query()},$scope.findOne=function(){$scope.recipe=Recipes.get({recipeId:$stateParams.recipeId})}}]);
"use strict";angular.module("recipes").factory("Recipes",["$resource",function($resource){return $resource("api/recipes/:recipeId",{recipeId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]);
"use strict";angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").controller("ChangePasswordController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]);
"use strict";angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}}]);
"use strict";angular.module("users").controller("SocialAccountsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/")}]);